#!/usr/bin/env python

import os
import shutil
import subprocess


def generate_pkg_list_readme():
  """
  Recursively looks a directory using `fd` , captures the
  basenames of files with `spec` extension and appends
  each of them to a `README.md` document.
  """

  script_dir = os.path.dirname(os.path.realpath(__file__))
  pkgs_dir = os.path.join(script_dir, '..', 'packages')
  output_file = os.path.join(os.path.realpath(pkgs_dir), 'README.md')
  removed_pkgs_file = os.path.join(os.path.realpath(pkgs_dir), 'removed-packages.txt')

  fd_path = shutil.which('fd')

  if fd_path is None:
    msg = 'Error: `fd` was not found. Please ensure `fd` is installed and added to a directory in your $PATH'
    raise FileNotFoundError(msg)

  # Use `fd` to find files with the `spec` extension and get their basenames
  args = [fd_path, '--glob', '*.spec', pkgs_dir]
  result = subprocess.run(args, capture_output=True, text=True, check=True)
  file_paths = result.stdout.strip().split('\n')

  removed_pkg_names = []

  with open(removed_pkgs_file, 'r') as f:
    removed_pkg_names = [entry.strip() for entry in f]

  # Filter through file paths and remove any empty strings that might cause an error.
  # In Python, if a string is empty, it automatically counts as false
  file_paths = [path for path in file_paths if path]

  # Collect all basenames and add the missing package, then sort the list
  basenames = sorted([os.path.basename(path) for path in file_paths] + removed_pkg_names)

  # Generate the Markdown content
  markdown_content = """<!--
    THIS FILE IS AUTO-GENERATED! DO NOT MANUALLY EDIT UNLESS NEEDED!
-->

# Packages available for installation\n
"""

  for basename in basenames:
    # Sort through the basenames and retrieve the filenames without an extension
    pkg_name, _ = os.path.splitext(basename)
    markdown_content += f'* `{pkg_name}`\n'

  # Create the `README.md` file
  with open(output_file, 'w', newline='\n') as f:
    _ = f.write(markdown_content)

  # Print success message
  print(f'Successfully generated `{os.path.relpath(output_file)}`!')
# end of generate_pkg_list_readme

if __name__ == '__main__':
  generate_pkg_list_readme()
