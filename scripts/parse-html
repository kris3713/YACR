#!/usr/bin/env python

import re
import sys
from lxml import html
import requests


def parse_html(url: str, regex_str: str, xpath_expr: str):
    """
    Parses HTML content from a URL and
    extracts the desired information using
    regular expressions and XPath expressions.
    """

    result = ''

    # Compile the regular expression from string
    regex = re.compile(regex_str)

    # Invoke a new HTTP GET request
    user_agent = 'Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0'
    response = requests.get(url, headers={ 'User-Agent': user_agent })
    content = response.content.replace(b'\xc2\xa0', b'')
    html_content = html.fromstring(content)

    #  Find all the elements that were captured in the XPath expression
    elements = html_content.xpath(xpath_expr)

    for e in elements:
        # If you want the text content of the element:
        # print(element.text_content())
        # If you want the HTML representation of the element:
        v: str = html.tostring(e).decode()

        matches = regex.search(v)

        if matches is not None: result = matches.group(1)  # noqa: E701

    print(result)
# end of parse_html

if __name__ == '__main__':
    # Allow the user to pass in the arguments from the command line
    parse_html(sys.argv[1], sys.argv[2], sys.argv[3])

# # This is how it should be used
# parse_html(
#     'https://www.tweaking4all.com/home-theatre/rename-my-tv-series-v2/',
#     'RenameMyTVSeries-([\\d.]+)-Linux64bit\\.tar\\.gz',
#     '//div[@class="alert alert-success"]/table/tr/td[contains(text(),"RenameMyTVSeries")]',
# )

# # This is how it should be used in cli
# ./scripts/parse-html 'https://www.tweaking4all.com/home-theatre/rename-my-tv-series-v2/' 'RenameMyTVSeries-([\\d.]+)-Linux64bit\\.tar\\.gz' '//div[@class="alert alert-success"]/table/tr/td[contains(text(),"RenameMyTVSeries")]'
